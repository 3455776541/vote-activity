package com.lyl.outsourcing.activity.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RaffleRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public RaffleRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOpenIdIsNull() {
            addCriterion("open_id is null");
            return (Criteria) this;
        }

        public Criteria andOpenIdIsNotNull() {
            addCriterion("open_id is not null");
            return (Criteria) this;
        }

        public Criteria andOpenIdEqualTo(String value) {
            addCriterion("open_id =", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdNotEqualTo(String value) {
            addCriterion("open_id <>", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdGreaterThan(String value) {
            addCriterion("open_id >", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdGreaterThanOrEqualTo(String value) {
            addCriterion("open_id >=", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdLessThan(String value) {
            addCriterion("open_id <", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdLessThanOrEqualTo(String value) {
            addCriterion("open_id <=", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdLike(String value) {
            addCriterion("open_id like", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdNotLike(String value) {
            addCriterion("open_id not like", value, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdIn(List<String> values) {
            addCriterion("open_id in", values, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdNotIn(List<String> values) {
            addCriterion("open_id not in", values, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdBetween(String value1, String value2) {
            addCriterion("open_id between", value1, value2, "openId");
            return (Criteria) this;
        }

        public Criteria andOpenIdNotBetween(String value1, String value2) {
            addCriterion("open_id not between", value1, value2, "openId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdIsNull() {
            addCriterion("raffle_id is null");
            return (Criteria) this;
        }

        public Criteria andRaffleIdIsNotNull() {
            addCriterion("raffle_id is not null");
            return (Criteria) this;
        }

        public Criteria andRaffleIdEqualTo(Long value) {
            addCriterion("raffle_id =", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdNotEqualTo(Long value) {
            addCriterion("raffle_id <>", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdGreaterThan(Long value) {
            addCriterion("raffle_id >", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("raffle_id >=", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdLessThan(Long value) {
            addCriterion("raffle_id <", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdLessThanOrEqualTo(Long value) {
            addCriterion("raffle_id <=", value, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdIn(List<Long> values) {
            addCriterion("raffle_id in", values, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdNotIn(List<Long> values) {
            addCriterion("raffle_id not in", values, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdBetween(Long value1, Long value2) {
            addCriterion("raffle_id between", value1, value2, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleIdNotBetween(Long value1, Long value2) {
            addCriterion("raffle_id not between", value1, value2, "raffleId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdIsNull() {
            addCriterion("raffle_item_id is null");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdIsNotNull() {
            addCriterion("raffle_item_id is not null");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdEqualTo(Long value) {
            addCriterion("raffle_item_id =", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdNotEqualTo(Long value) {
            addCriterion("raffle_item_id <>", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdGreaterThan(Long value) {
            addCriterion("raffle_item_id >", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdGreaterThanOrEqualTo(Long value) {
            addCriterion("raffle_item_id >=", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdLessThan(Long value) {
            addCriterion("raffle_item_id <", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdLessThanOrEqualTo(Long value) {
            addCriterion("raffle_item_id <=", value, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdIn(List<Long> values) {
            addCriterion("raffle_item_id in", values, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdNotIn(List<Long> values) {
            addCriterion("raffle_item_id not in", values, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdBetween(Long value1, Long value2) {
            addCriterion("raffle_item_id between", value1, value2, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andRaffleItemIdNotBetween(Long value1, Long value2) {
            addCriterion("raffle_item_id not between", value1, value2, "raffleItemId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("`state` =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("`state` <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("`state` >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("`state` >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("`state` <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("`state` <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeIsNull() {
            addCriterion("raffle_time is null");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeIsNotNull() {
            addCriterion("raffle_time is not null");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeEqualTo(Date value) {
            addCriterion("raffle_time =", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeNotEqualTo(Date value) {
            addCriterion("raffle_time <>", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeGreaterThan(Date value) {
            addCriterion("raffle_time >", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("raffle_time >=", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeLessThan(Date value) {
            addCriterion("raffle_time <", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeLessThanOrEqualTo(Date value) {
            addCriterion("raffle_time <=", value, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeIn(List<Date> values) {
            addCriterion("raffle_time in", values, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeNotIn(List<Date> values) {
            addCriterion("raffle_time not in", values, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeBetween(Date value1, Date value2) {
            addCriterion("raffle_time between", value1, value2, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andRaffleTimeNotBetween(Date value1, Date value2) {
            addCriterion("raffle_time not between", value1, value2, "raffleTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeIsNull() {
            addCriterion("achieve_time is null");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeIsNotNull() {
            addCriterion("achieve_time is not null");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeEqualTo(Date value) {
            addCriterion("achieve_time =", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeNotEqualTo(Date value) {
            addCriterion("achieve_time <>", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeGreaterThan(Date value) {
            addCriterion("achieve_time >", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("achieve_time >=", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeLessThan(Date value) {
            addCriterion("achieve_time <", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeLessThanOrEqualTo(Date value) {
            addCriterion("achieve_time <=", value, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeIn(List<Date> values) {
            addCriterion("achieve_time in", values, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeNotIn(List<Date> values) {
            addCriterion("achieve_time not in", values, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeBetween(Date value1, Date value2) {
            addCriterion("achieve_time between", value1, value2, "achieveTime");
            return (Criteria) this;
        }

        public Criteria andAchieveTimeNotBetween(Date value1, Date value2) {
            addCriterion("achieve_time not between", value1, value2, "achieveTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table act_raffle_record
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table act_raffle_record
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}